# Ring the bell if any background window rang a bell
set -g bell-action any

# Default termtype. If the rcfile sets $TERM, that overrides this value.
set -g default-terminal screen-256color

# do not auto rename
set-option -g allow-rename off

# enable mouse mode
set -g mouse on

# enable focus events
set -g focus-events on

# Keep your finger on ctrl, or don't
bind-key ^D detach-client

# Create splits and vertical splits
bind-key | split-window -h -p 50 -c "#{pane_current_path}"
bind-key ^V split-window -h -p 50 -c "#{pane_current_path}"
bind-key - split-window -p 50 -c "#{pane_current_path}"
bind-key ^S split-window -p 50 -c "#{pane_current_path}"

# Pane resize in all four directions using vi bindings.
# Can use these raw but I map them to shift-ctrl-<h,j,k,l> in iTerm.
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5

# Smart pane switching with awareness of vim splits.
# Source: https://github.com/christoomey/vim-tmux-navigator
# is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?x?)(diff)?$"'
# bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
# bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
# bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
# bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
# bind -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

# Use vi keybindings for tmux commandline input.
# Note that to get command mode you need to hit ESC twice...
# set -g status-keys vi

# Use vi keybindings in copy and choice modes
setw -g mode-keys vi
bind-key -T copy-mode-vi 'v' send -X begin-selection
bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel 'xclip -in -selection clipboard'
bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel 'xclip -in -selection clipboard'

# easily toggle synchronization (mnemonic: e is for echo)
# sends input to all panes in a given window.
bind e setw synchronize-panes on
bind E setw synchronize-panes off

# set first window to index 1 (not 0) to map more to the keyboard layout...
set-option -g base-index 1
set-window-option -g pane-base-index 1

# Patch for OS X pbpaste and pbcopy under tmux.
if-shell '[ $(uname) -eq "Darwin" ]' \
    'set-option -g default-command "which reattach-to-user-namespace > /dev/null && reattach-to-user-namespace -l $SHELL || $SHELL" ' \
    'bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "xclip -se c -i"'

# No escape time for vi mode
set -sg escape-time 0

# Bigger history
set -g history-limit 10000

# New windows/pane in $PWD
bind c new-window -c "#{pane_current_path}"

# Fix key bindings broken in tmux 2.1
set -g assume-paste-time 0

# force a reload of the config file
unbind r
bind r source-file ~/.tmux.conf \; display "Reloaded!"

# Local config
if-shell "[ -f ~/.tmux.conf.user ]" 'source ~/.tmux.conf.user'

bind j select-pane -D
bind k select-pane -U
bind h select-pane -L
bind l select-pane -R
set-option -g renumber-windows on
set-option -g status "on"

# statusbar
set -g status-style bg=black,fg=white,none
set -g status-justify "left"

# pane border
set -g pane-border-style fg=black
set -g pane-active-border-style fg=blue
set -g display-panes-colour black
set -g display-panes-active-colour brightblack

# message infos
set -g message-style fg=cyan,bg=brightblack
set -g message-command-style fg=cyan,bg=brightblack

# clock
set-window-option -g clock-mode-colour cyan

## Theme settings mixed with colors (unfortunately, but there is no cleaner way)

set-option -g status-left "#[fg=black,bg=blue,bold] #S "
set-option -g status-right "#[fg=white,bg=brightblack] #(kubectl config current-context) | %Y-%m-%d %H:%M #[fg=black,bg=cyan] #H "

set-window-option -g window-status-current-format "#[fg=black,bg=cyan] #I#{?window_zoomed_flag,\*Z,} #[fg=black,bg=cyan,bold]#W "
set-window-option -g window-status-format "#[fg=white,bg=brightblack] #I#{?window_zoomed_flag,\*Z,} #W "
